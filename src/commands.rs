pub enum SsdCommand {
    DriveOutputControl = 0x01,
    GateDrivingVoltageControl = 0x03,
    SourceDrivingVoltageControl = 0x04,
    InitialCodeSettingOTPProgram = 0x08,
    WriteRegisterInitialCodeSetting = 0x09,
    ReadRegisterInitialCodeSetting = 0x0A,
    BoosterSoftStartControl = 0x0C,
    DeepSleepMode = 0x10,
    DataEntryModeSetting = 0x11,
    SWReset = 0x12,
    HVReadyDetection = 0x14,
    VCIDetection = 0x15,
    TemperatureSensorControl = 0x18,
    TemperatureSensorControlWriteRegister = 0x1A,
    TemperatureSensorControlReadRegister = 0x1B,
    TemperatureSensorControlWriteRegisterExternal = 0x1C,
    MasterActivation = 0x20,
    DisplayUpdateControl1 = 0x21,
    DisplayUpdateControl2 = 0x22,
    WriteRamBW = 0x24,
    WriteRamRed = 0x26,
    ReadRam = 0x27,
    VcomSense = 0x28,
    VcomSenseDuration = 0x29,
    ProgramVcomOtp = 0x2A,
    WriteRegisterVcomControl = 0x2B,
    WriteVcomRegister = 0x2C,
    OtpRegisterRead = 0x2D,
    UserIdRead = 0x2E,
    StatusBitRead = 0x2F,
    ProgramWsOtp = 0x30,
    LoadWsOtp = 0x31,
    WriteLutRegister = 0x32,
    CrcCalculation = 0x34,
    CrcStatusRead = 0x35,
    ProgramOtpSelection = 0x36,
    WriteRegisterDisplayOption = 0x37,
    WriteRegisterUserId = 0x38,
    OtpProgramMode = 0x39,
    BorderWaveformnControl = 0x3C,
    EndOption = 0x3F,
    ReadRamOption = 0x41,
    SetRamXStartEnd = 0x44,
    SetRamYStartEnd = 0x45,
    AutoWriteRedRam = 0x46,
    AutoWriteBWRam = 0x47,
    SetRamXCounter = 0x4E,
    SetRamYCounter = 0x4F,
    Nop = 0x7F,
}
impl Into<u8> for SsdCommand {
    fn into(self) -> u8 {
        self as u8
    }
}
